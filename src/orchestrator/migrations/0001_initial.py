# Generated by Django 5.2.5 on 2025-08-29 04:02

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Model",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "deploy_algorithm",
                    models.CharField(
                        choices=[
                            ("BEST_FIT", "Best fit"),
                            ("LEAST_LOADED", "Least loaded"),
                            ("BIGGEST_FREE_MEMORY", "Biggest free memory"),
                        ],
                        default="LEAST_LOADED",
                        max_length=50,
                    ),
                ),
                (
                    "routing_algorithm",
                    models.CharField(
                        choices=[
                            ("ROUND_ROBIN", "Round robin"),
                            ("LEAST_SERVING", "Least serving"),
                            ("RANDOM", "Random"),
                            ("WEIGHTED_ROUND_ROBIN", "Weighted round robin"),
                        ],
                        default="ROUND_ROBIN",
                        max_length=50,
                    ),
                ),
                ("instance_num", models.IntegerField(default=1)),
                ("config", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "name",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="ModelInstance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LOADING", "Loading"),
                            ("READY", "Ready"),
                            ("ERROR", "Error"),
                        ],
                        max_length=16,
                    ),
                ),
                ("loaded_at", models.DateTimeField(auto_now_add=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instances",
                        to="orchestrator.model",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("infer_count", models.IntegerField()),
                ("avg_latency_ms", models.FloatField()),
                ("gpu_mem_used_mb", models.IntegerField()),
                (
                    "deployment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="orchestrator.modelinstance",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelVersion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="1", max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="orchestrator.model",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="modelinstance",
            name="version",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instances",
                to="orchestrator.modelversion",
            ),
        ),
        migrations.AddField(
            model_name="model",
            name="tags",
            field=models.ManyToManyField(
                blank=True, related_name="models", to="orchestrator.tag"
            ),
        ),
        migrations.CreateModel(
            name="TritonServer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[("HEALTHY", "Healthy"), ("UNHEALTHY", "Unhealthy")],
                        max_length=16,
                    ),
                ),
                ("total_gpu_memory_mb", models.IntegerField()),
                ("total_used_gpu_memory_mb", models.IntegerField()),
                ("total_cpu_memory_mb", models.IntegerField()),
                ("total_used_cpu_memory_mb", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("metadata", models.JSONField()),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="servers", to="orchestrator.tag"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="modelinstance",
            name="server",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instances",
                to="orchestrator.tritonserver",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="modelinstance",
            unique_together={("model", "version", "server")},
        ),
    ]
